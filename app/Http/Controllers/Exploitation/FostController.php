<?php

namespace App\Http\Controllers\Exploitation;


use App\Enums\App\SecteursFost;
use App\Enums\App\TypesFost;
use App\Http\Requests\exploitation\fost\StoreFostRequest;
use App\Http\Requests\exploitation\fost\UpdateFostRequest;
use App\Http\Controllers\Controller;
use App\Models\Fost;
use Inertia\Inertia;
use Carbon\Carbon;
use Inertia\Response;
use Illuminate\Http\Request;

class FostController extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index(Request $request): response
    {
        $request->filled('search') ? $searchTerm = request(['search'])['search'] : $searchTerm = "";

        $fosts = Fost::search($request)
            ->paginate(12);
        return Inertia::render('Exploitation/Fosts/Index', compact('fosts', 'searchTerm'));
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        return Inertia::render('Exploitation/Fosts/Create', [
            'SecteursFost' => SecteursFost::options(),
            'TypesFost' => TypesFost::options(),
        ]);
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(StoreFostRequest $request)
    {
        $dateDebut = Carbon::createFromDate(
            $request->DateDebut['year'],
            $request->DateDebut['month'],
            $request->DateDebut['day']
        )->startOfDay();
        if ($request->DateFin === null) {
            $dateFin = null;
        } else {
            $dateFin = Carbon::createFromDate(
                $request->dateFin['year'],
                $request->dateFin['month'],
                $request->dateFin['day']
            )->endOfDay();
        }
        $fost = Fost::create([
            'code' => implode("-", [$request->SecteursFost, $request->TypesFost, $request->numero]),
            'libelle' => $request->libelle,
            'Denomination' => $request->Denomination,
            'date_debut' => $dateDebut,
            'date_fin' => $dateFin,
            'modification_user_id' => $request->user()->id,
        ]);

        return redirect()->route('exploitation.fosts.index')->with('Fost ajouté avec succès.');
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(Fost $fost)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(UpdateFostRequest $request, Fost $fost)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(Fost $fost)
    {
        //
    }
}
